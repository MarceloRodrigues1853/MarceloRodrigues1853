name: Atualizar README autom√°tico

on:
  schedule:
    - cron: '0 12 * * *' # executa todo dia √†s 09:00 no hor√°rio de Bras√≠lia (12:00 UTC)
  workflow_dispatch:

concurrency:
  group: profile-readme
  cancel-in-progress: true

jobs:
  update-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gerar README (stats do perfil)
        uses: teoxoy/profile-readme-stats@v3
        with:
          token: ${{ secrets.USER_TOKEN }}
          template: ./TEMPLATE.md
          includeForks: false

      - name: Injetar reposit√≥rios recentes
        run: |
          echo "üîÑ Buscando reposit√≥rios recentes..."
          REPOS=$(curl -s -H "Authorization: token ${{ secrets.USER_TOKEN }}" \
            "https://api.github.com/users/MarceloRodrigues1853/repos?sort=updated&per_page=5" |
            jq -r '.[] | "- [\(.name)](\(.html_url)) ‚Äî ‚≠ê \(.stargazers_count) ‚Ä¢ \(.description // "Sem descri√ß√£o") ‚Ä¢ √öltimo commit: \(.updated_at | split("T")[0])"')

          awk -v repos="$REPOS" '
            /{{ REPOSITORIES_TEMPLATE_START/ {print; print repos; skip=1; next}
            /{{ REPOSITORIES_TEMPLATE_END/ {skip=0}
            skip==0 {print}
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Injetar tecnologias por uso (tratamento de erro)
        run: |
          echo "üîÑ Calculando tecnologias por uso..."
          LANG_URLS=$(curl -s -H "Authorization: token ${{ secrets.USER_TOKEN }}" \
            "https://api.github.com/users/MarceloRodrigues1853/repos?per_page=100" | jq -r '.[].languages_url')

          if [ -z "$LANG_URLS" ]; then
            echo "‚ö†Ô∏è Nenhum dado de linguagem encontrado."
            LANGS="- Nenhuma linguagem detectada"
          else
            # Junta todos os JSONs de linguagens, ignora vazios e soma valores
            LANGS_JSON=$(for url in $LANG_URLS; do
              DATA=$(curl -s -H "Authorization: token ${{ secrets.USER_TOKEN }}" "$url")
              if [ "$DATA" != "{}" ] && [ -n "$DATA" ]; then
                echo "$DATA"
              fi
            done | jq -s 'add')

            TOTAL=$(echo "$LANGS_JSON" | jq '[.[]] | add')
            if [ "$TOTAL" -eq 0 ] 2>/dev/null; then
              LANGS="- Nenhuma linguagem detectada"
            else
              LANGS=$(echo "$LANGS_JSON" | jq --arg total "$TOTAL" -r \
                'to_entries | sort_by(-.value) | .[:6] | map("- \(.key) ‚Äî \((.value / ($total | tonumber) * 100) | floor)%") | .[]')
            fi
          fi

          awk -v langs="$LANGS" '
            /{{ LANGUAGE_TEMPLATE_START/ {print; print langs; skip=1; next}
            /{{ LANGUAGE_TEMPLATE_END/ {skip=0}
            skip==0 {print}
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Commit e Push se houve mudan√ßas
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "Atualizando README autom√°tico"
            git push
          else
            echo "‚úÖ Nenhuma mudan√ßa detectada."
          fi
